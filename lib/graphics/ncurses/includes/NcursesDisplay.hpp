#pragma once

#include "Interfaces/IDisplayModule.hpp"
#include <fcntl.h>
#include <fstream>
#include <ncurses.h>

namespace arc::display {
class NcursesDisplay : public arc::display::IDisplayModule {
        public:
            NcursesDisplay();
            ~NcursesDisplay();

            /**
             * @brief draw all the objects generated by the game
             *
             * @param objs
             */
            void drawObjects(std::vector<std::shared_ptr<arc::Object>> objs) override;

            /**
             * @brief get any event
             *
             * @return const arc::Events
             */
            arc::Events getEvent() const override;

            /**
             * @brief Draw the interface of the game
             *
             */
            void drawInterface(std::vector<std::shared_ptr<arc::Object>> objs);

        private : void getTexture(const std::string fileName, int y, int x);
            void printMiddle(int y, int x, const std::string text, arc::Color color);
            arc::Color getSpriteColor(std::string line);

            /**
             * @brief draw the border of the play area
             *
             */
            void drawBorder();

            /**
             * @brief draw the interface
             *
             */
            void printInterface(int y, int x, const std::string text, arc::Color color);

    };
}